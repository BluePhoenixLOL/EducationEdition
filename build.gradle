plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.7.+'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = getVersion()
group = project.maven_group

loom {
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    maven {
        url = 'https://jitpack.io'
        content {
            includeGroup "com.github.Chocohead"
        }
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"

        content {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Fabric-ASM
    modImplementation "com.github.Chocohead:Fabric-ASM:${project.fabric_asm_version}"
    include "com.github.Chocohead:Fabric-ASM:${project.fabric_asm_version}"

    // only affects runClient, does not affect gradlew build. add -PuseThirdPartyMods=false to not use these
    if (findProperty("useThirdPartyMods") != "false") {
        modRuntimeOnly "maven.modrinth:ferrite-core:5.0.0-fabric"
        //modRuntimeOnly "maven.modrinth:indium:1.0.5+mc1.19"
        modRuntimeOnly "maven.modrinth:lazydfu:0.1.3"
        modRuntimeOnly "maven.modrinth:lithium:mc1.19-0.8.0"
        //modRuntimeOnly "maven.modrinth:modmenu:4.0.0"
        //modRuntimeOnly "maven.modrinth:sodium:mc1.19-0.4.2"
        modRuntimeOnly "maven.modrinth:starlight:1.1.1+1.19"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
    options.fork = true
    options.incremental = true
}

tasks.withType(Test).configureEach {
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

String getVersion() {
    String version = "${project.mod_version}+MC_${project.minecraft_version}"

    if (findProperty("releaseType") != "stable") {
        version += "-unstable"
    }

    return version
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

